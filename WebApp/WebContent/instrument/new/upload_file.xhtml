<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	template="/WEB-INF/templates/new_instrument.xhtml">

	<ui:define name="title">New Instrument</ui:define>
	<ui:define name="instrumentHead">
		<c:set var="instrumentStep" value="1" scope="request"/>
		<script>
			var hasFileData = #{newInstrumentBean.currentInstrumentFile.hasFileData};
			
			$(document).ready(function() {
				if (hasFileData) {
					$('#fileSpec').show();
				} else {
					$('#uploadFile').show();
				}
			});
		</script>
	</ui:define>
	<ui:define name="new_instrument_content">
		<h:form id="newInstrumentForm" metho="post" charset="utf8" enctype="multipart/form-data">
		
			<h:inputHidden id="sampleFileContent" value="#{newInstrumentBean.currentInstrumentFile.fileData}"/>
			<h:commandLink id="guessFileLayout" style="invisible" action="#{newInstrumentBean.currentInstrumentFile.guessFileLayout}">
				<f:ajax render="headerType headerLineCount headerString separator columnHeaderRows sampleFileContent" onevent="updateFileContentDisplay"/>
			</h:commandLink>
		
			<div id="uploadFormContent">		
				<div class="instructions">
					Please upload a sample file from your instrument.
					<h:outputText value="If your instrument uses more than one data file, others can be uploaded later." rendered="#{!newInstrumentBean.hasMultipleFiles}"/>
				</div>
				
				<h:panelGrid columns="3" cellpadding="5">
					<p:outputLabel for="fileDescription" value="File Description (e.g. TSG)"/>
					<p:inputText id="fileDescription" value="#{newInstrumentBean.currentInstrumentFile.fileDescription}" required="true" requiredMessage="You must enter a file description">
						<f:validator validatorId="instrumentFileDescriptionValidator"/>
						<f:attribute name="bean" value="#{newInstrumentBean}"/>
						<p:ajax update="msgFileDescription" event="keyup"/>
					</p:inputText>
					<p:message for="fileDescription" id="msgFileDescription" display="both"/>
				</h:panelGrid>

				<div id="uploadFile" class="hidden">
					<p:outputLabel value="Select a file to upload"/>
					<p:fileUpload fileUploadListener="#{newInstrumentBean.handleFileUpload}" mode="advanced" auto="true" oncomplete="showProcessingMessage()"/>
				</div>
				
				<div id="processingFileMessage" class="hidden">
					Processing file...
				</div>
				
				<div id="fileFormatSpec" class="hidden">
					<div id="fileFormatSpecContent">
						<div id="fileContent"></div>
						<div id="fileFormat">
							<p:panel header="File Header">
								<p:outputPanel id="headerPanel">
									<p:selectOneRadio id="headerType" widgetVar="headerTypeSelector" value="#{newInstrumentBean.currentInstrumentFile.headerType}" layout="custom" onchange="updateHeaderFields()">
										<f:selectItem itemValue="0"/>
										<f:selectItem itemValue="1"/>
									</p:selectOneRadio>
									
									<h:panelGrid columns="3" cellpadding="5">
										<p:radioButton id="lineCountType" for="headerType" itemIndex="0"/>
										<p:outputLabel for="lineCountType" value="# Lines"/>
										<p:spinner id="headerLineCount" widgetVar="headerLines" value="#{newInstrumentBean.currentInstrumentFile.headerLines}" min="0" max="500" onchange="renderSampleFile()">
											<p:ajax/>
										</p:spinner>
										
										<p:radioButton id="stringType" for="headerType" itemIndex="1"/>
										<p:outputLabel for="stringType" value="End Line"/>
										<p:inputText id="headerString" widgetVar="headerEndString" value="#{newInstrumentBean.currentInstrumentFile.headerString}"/>
									</h:panelGrid>
								</p:outputPanel>
							</p:panel>

							<p:panel header="Column Headings">
								<p:outputLabel for="columnHeaderRows" value="Column Header Rows"/>
								<p:spinner id="columnHeaderRows" widgetVar="colHeadRows" value="#{newInstrumentBean.currentInstrumentFile.columnHeaderRows}"/>
							</p:panel>
							
							<p:panel header="Separator">
								<p:outputLabel for="separator" value="Separator"/>
								<p:selectOneMenu id="separator" value="#{newInstrumentBean.currentInstrumentFile.separator}">
									<f:selectItem itemLabel="Tab" itemValue="\t"/>
									<f:selectItem itemLabel="Comma" itemValue=","/>
									<f:selectItem itemLabel="Semi-colon" itemValue=";"/>
									<f:selectItem itemLabel="Space" itemValue=" "/>
								</p:selectOneMenu>
							</p:panel>
						</div>
					</div>
				</div>
			</div>
			<!--  The cancel include has two entries (one is invisible) -->
			<h:panelGrid columns="4" cellpadding="5" styleClass="buttonPanel">
				<ui:include src="/WEB-INF/templates/new_instrument_cancel.xhtml"/>
				<p:commandButton value="Back" ajax="false" action="#{newInstrumentBean.goToName}" immediate="true"/>
				<p:commandButton value="Next" ajax="false" action="#{newInstrumentBean.goToFiles}"/>
			</h:panelGrid>
		</h:form>
	</ui:define>
</ui:composition>
