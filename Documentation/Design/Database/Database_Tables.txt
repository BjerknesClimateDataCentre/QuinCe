% QuinCe Database Tables

# Version History

Version      Date           Description
---------    ------------   ------------------------------------------------------
1.0          xx             xx

# Introduction
This document specifies the database tables that are used in the QuinCe project.

# Users
This section defines tables related to users and the different parts
of the system they are linked to.

## `user`
Defines a user account

Field                    Type           Description
--------------------     ------------   ---------------------------------------------------
email                    String         The user's email address - used as the username
salt                     Binary         The salt used for the password
password                 Binary         Password field (salted and hashed)
first_name               String         The user's first/given name
surname                  String         The user's surname
email_code               String         Code for verifying email address
email_code_time          DateTime       The time that the email verification code was generated
password_code            String         Code for resetting password
password_code_time       DateTime       The time that the password reset code was generated
permissions              Integer        A field for defining user permissions. Defined as a bitmask.

#### Permissions
The permissions that can be applied to a user are as follows:

# Instruments
The definition of an instrument is quite complex and requires multiple tables

## `instrument`
This table defines the basic details of an instrument.

We allow up to three sensors of each type to be defined. They are treated as
separate fields in violation of third normal form, but the amount of processing
required to handle dynamically defined sensors would be prohibitive.

The table alsp defines which columns contain which data in an instrument's data
files. Entries are supplied for all the possible formatting options. Those that
aren't needed will be left empty.

Field                    Type           Description
--------------------     ------------   -----------------------------------------------------------------
id                       Integer        ID
owner                    F_KEY          The ID of the user who owns this instrument
name                     String         The name of the instrument
intake_temp_1_name       String         The name of the first intake temperature sensor
intake_temp_2_name       String         The name of the second intake temperature sensor
intake_temp_3_name       String         The name of the third intake temperature sensor
salinity_1_name          String         The name of the first salinity sensor
salinity_2_name          String         The name of the second salinity sensor
salinity_3_name          String         The name of the third salinity sensor
eqt_1_name               String         The name of the first equilibrator temperature sensor
eqt_2_name               String         The name of the second equilibrator temperature sensor
eqt_3_name               String         The name of the third equilibrator temperature sensor
eqp_1_name               String         The name of the first equilibrator pressure sensor
eqp_2_name               String         The name of the second equilibrator pressure sensor
eqp_3_name               String         The name of the third equilibrator pressure sensor
separator_char           String         The character that separates fields in the instrument's data files
date_format              Integer        The date format used in the instrument's data files
time_format              Integer        The time format used in the instrument's data files
lat_format               Integer        The latitude format used in the instrument's data files
lon_format               Integer        The longitude format used in the instrument's data files
header_lines             Integer        The number of header lines in the instrument's data files
has_atmospheric_pressure Boolean        Indicates whether or not the instrument records atmospheric pressure
samples_dried            Boolean        Indicates whether or not samples are dried before being analysed
run_type_col             Integer        Run type
date_col                 Integer        Date (all parts in one column)
year_col                 Integer        Year
month_col                Integer        Month
day_col                  Integer        Day
time_col                 Integer        Time (all parts in one column)
hour_col                 Integer        Hour
minute_col               Integer        Minute
second_col               Integer        Second
latitude_col             Integer        Latitude
north_south_col          Integer        Latitude direction (N/S)
longitude_col            Integer        Longitude
east_west_col            Integer        Longitude direction (E/W)
intake_temp_1_col        Integer        Intake temperature 1
intake_temp_2_col        Integer        Intake temperature 2
intake_temp_3_col        Integer        Intake temperature 3
salinity_1_col           Integer        Salinity 1
salinity_2_col           Integer        Salinity 2
salinity_3_col           Integer        Salinity 3
eqt_1_col                Integer        Equilibrator temperature 1
eqt_2_col                Integer        Equilibrator temperature 2
eqt_3_col                Integer        Equilibrator temperature 3
eqp_1_col                Integer        Equilibrator pressure 1
eqp_2_col                Integer        Equilibrator pressure 2
eqp_3_col                Integer        Equilibrator pressure 3
atmospheric_pressure_col Integer        Atmospheric pressure
moisture_col             Integer        Moisture
co2_col                  Integer        CO~2~

#### `date_format`
The `date_format` field will have one of the following values:

Value    Format
-----    --------------------------
0        Separate columns for year, month and day
1        YYYYMMDD
2        DD/MM/YY
3        DD/MM/YYYY
4        MM/DD/YY
5        MM/DD/YYYY

#### `time_format`
The `time_format` field will have one of the following values:

Value    Format
-----    --------------------------
0        Separate fields for hour, minute and second
1        HHMMSS
2        HH:MM:SS

#### `lat_format`
The `lat_format` field will have one of the following values:

Value    Format
-----    --------------------------
0        -90 to 90
1        0 to 90, with N/S in a separate column

#### `lon_format`
The `lon_format` field will have one of the following values:

Value    Format
-----    --------------------------
0        0 to 360
1        -180 to 180
2        0 to 180, with E/W in a separate column

### `run_types`
Each instrument will have a number of run types. QuinCe has only two types: CO~2~ and gas standards.
This table will hold details of which values in the
`run_type` column (as defined in the `columns` table) correspond to which run types.

Field                    Type           Description
--------------------     ------------   -----------------------------------------------------------------
id                       Integer        ID
instrument_id            F_KEY          Instrument ID
run_name                 String         The value from the `run_type` column in the Columns table
type                     Integer        The run type

##### `type`
The `type` column will contain one of the following values:

Value    Run type
-----    --------------------------
-1       Not used
0        Sea water CO~2~
1        Atmospheric CO~2~
2        Gas standard

## `gas_standard_deployment`
Each gas standard is supplied at a specific concentration, which may vary between
cylinders. This table will store records of when gas standards were deployed,
and the concentrations for each standard are stored in the child `gas_standard_concentration`
table.

Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
concentration_id         Integer        ID
instrument_id            F_KEY          Instrument ID
deployed_date            Date           The date on which the standard was deployed

## `gas_standard_concentration`


Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
concentration_id         F_KEY          The parent gas standard deployment record
standard_name            String         The name of the standard (from the `run_types` table)
concentration            Float          The concentration of the standard


## `sensor_calibration`
This table will store the sensor calibrations for the instrument. It holds the
name overall details of the calibration session, and the `calibration_coefficients`
table below stores the actual calibration values
Each calibration will be defined as a polynomial curve with up to five harmonics.

Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
id                       Integer        ID
instrument_id            F_KEY          Instrument ID
caibration_date          Date           The date of the calibration

## `calibration_coefficients`
This table stores the individual calibration coefficients for a single sensor.
It will contain one record for each sensor on the instrument for each record in
the parent `sensor_calibration` table.

Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
calibration_id           F_KEY          Instrument ID
sensor                   String         The sensor identifier
intercept                Float          The intercept of the calibration curve
x                        Float          Slope
x2                       Float          Second harmonic
x3                       Float          Third harmonic
x4                       Float          Fourth harmonic
x5                       Float          Fifth harmonic

#### `sensor`
The `sensor` field will identify the sensor that the calibration is for.
It will be of the form `<sensortype>_<sensornumber>` (there can be up to three sensors of each type).

`sensor_type` will be one of:

Digit      Value
-----      -----
0          Intake temperature
1          Salinity
2          Equilibrator temperature
3          Equilibrator pressure

The second digit will be in the range 1-3. Therefore a `sensor` field value of
`3_2` indicates the second equilibrator pressure sensor.

# Data Files
For each data file that's uploaded, there are a number of pieces of information
that are required alongside it. This section describes all the tables required
to hold these details.

## `data_files`
This table is a simple list of all the data files held in the system.

Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
instrument_id            F_KEY          The instrument ID
filename                 String         The filename of the uploaded file. Must be unique for a given instrument
last_touched             Date           The date when the file was last touched. Files held beyond a given length of time will be automatically deleted.

## `co2_data`
This table will contain the records from the data file corresponding to the CO~2~ runs (both sea water and
atmospheric). This is what will be displayed in the QC view. Gas standards data will be stored in a separate table.

The table will be populated by the data reduction process. All calibrations
will have been applied.

Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
data_file_id             F_KEY          File ID
row                      Integer        Row number (from the original data file)
co2_type                 Integer        The type of CO~2~ measurement
date_time                DateTime       Date and time
longitude                Float          Longitude
latitude                 Float          Latitude
intake_temp_1            Float          Intake temperature 1
intake_temp_2            Float          Intake temperature 2
intake_temp_3            Float          Intake temperature 3
salinity_1               Float          Salinity 1
salinity_2               Float          Salinity 2
salinity_3               Float          Salinity 3
eqt_1                    Float          Equilibrator temperature 1
eqt_2                    Float          Equilibrator temperature 2
eqt_3                    Float          Equilibrator temperature 3
eqp_1                    Float          Equilibrator pressure 1
eqp_2                    Float          Equilibrator pressure 2
eqp_3                    Float          Equilibrator pressure 3
moisture                 Float          Moisture
atmospheric_pressure     Float          Atmospheric pressure
seawater_co2             Float          Sea water CO~2~
qc_flag                  Integer        The QC flag assigned by the automatic QC routines
qc_message               String         The message(s) from the automatic QC routines
woce_flag                Integer        The WOCE flag assigned by the user
woce_comment             String         The WOCE comment

##### `type`
The `co2_type` column will contain one of the following values:

Value    Run type
-----    --------------------------
0        Sea water CO~2~
1        Atmospheric CO~2~

## `gas_standards_data`
This file stores details of the gas standard measurements from the data files.
These will primarily be used in the data reduction routines to calibrate the actual
sea water measurements, but they will be recorded here so they can be examined by
the user.

Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
data_file_id             F_KEY          File ID
row                      Integer        Row number (from the original data file)
date_time                DateTime       Date and time
run_type                 String         The gas standard name, as defined in the `run_types` table
concentration            Float          The concentration measured

# Jobs
The majority of the data processing performed by QuinCe will be done by background tasks,
which will be managed within the database.

## `job`

Each background task will have a row in this table.

Field                    Type           Description
--------------------     ------------   -------------------------------------------------------------------------
job_id                   Integer        Job ID
owner                    F_KEY          The user id of the owner of the job
submitted                DateTime       The date and time on which the job was submitted
class                    String         The class name of the job to be run
parameters               String         The parameters to be passed to the job when it is run
status                   ENUM           The current status of the job (WAITING, RUNNING, FINISHED, ERROR)
started                  DateTime       The time when the job was started
ended                    DateTime       The time when the job completed
thread_name              String         The name of the thread which is running the job
progress                 Float          The progress of the job, expressed as a percentage
stack_trace              String         Used to store a stack trace in the event of an error

#### `class`
Each job will be executed by a specific Java class. Its name will be stored here.

#### `parameters`
The job's parameters will be stored as a simple string. If a job requires multiple
parameters, they will be separated by a semi-colon.

#### `status`
The status will have one of the following values:

Value    Status
-----    --------------------------
0        Queued (waiting to run)
1        Running
2        Finished
3        Error

#### `thread_name`
Jobs will be run as new threads within the system. Each thread will be named
according to the job it is running, and its name will be stored in the database
so the system can monitor whether the thread as died and left the job in a bad
state. In such situations the job will be returned to the queue to be re-run.
